name: Publish to pub.dev

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

# Publish using the reusable workflow from dart-lang.
jobs:
  publish:
    name: 'Publish to pub.dev'
    # environment: 'pub.dev'
    environment: 'pub.dev'
    permissions:
      id-token: write # This is required for requesting the JWT
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
      # Setup Dart SDK with JWT token
      - name: Setup Dart SDK with JWT token
        uses: dart-lang/setup-dart@a57a6c04cf7d4840e88432aad6281d1e125f0d46
      # Setup Flutter SDK
      - name: Install Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'

      # Minimal package setup and dry run checks.
      - name: Install dependencies
        run: flutter pub get
        working-directory: ${{ inputs.working-directory }}
      - name: Setup credentials
        run: |
          mkdir -p ~/.pub-cache 
          cat <<EOF > ~/.pub-cache/credentials.json
          {
            "accessToken":"${{ secrets.OAUTH_ACCESS_TOKEN }}",
            "refreshToken":"${{ secrets.OAUTH_REFRESH_TOKEN }}",
            "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
            "scopes": [ "openid", "https://www.googleapis.com/auth/userinfo.email" ],
            "expiration": 1570721159347
          }
          EOF
      - name: Publish - dry run
        run: dart pub publish --dry-run
        working-directory: ${{ inputs.working-directory }}
      # Publishing...
      - name: Publish to pub.dev
        run: dart pub publish -f
        working-directory: ${{ inputs.working-directory }}
